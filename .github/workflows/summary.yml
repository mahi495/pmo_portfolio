name: PMO Summary from repo file          # free-form name shown in Actions tab

on:                                       # WHEN should the workflow run?
  push:                                   # ① every push to main
    branches: [ main ]
  workflow_dispatch:                      # ② manual “Run workflow” button
  schedule:                               # ③ daily at 05:00 UTC (10:00 PKT)
    - cron:  '0 5 * * *'

jobs:
  summarise:
    runs-on: ubuntu-latest
    env:                                  # makes HF_TOKEN visible in all steps
      HF_TOKEN: ${{ secrets.HF_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Run summariser
        run: python summary.py kpi_export.csv

      - name: Debug – show summary file    # good for the first test
        run: head -50 SUMMARY_EMAIL.txt

      - name: Assemble e‑mail body
        run: |
          set -eo pipefail
          {
          echo "Hello Team,"
          echo
          echo "Below is today’s effort‑variance snapshot generated by the PMO pipeline."
          echo
          if [[ -f SUMMARY_EMAIL.txt ]]; then
              cat SUMMARY_EMAIL.txt
          else
            echo "(summary unavailable)"
          fi
          echo
          echo "Next steps"
          echo "• Review the items above and confirm root causes."
          echo "• Add recovery actions or updated ETAs to the project tracker before 17:00 PKT."
          echo
          echo "Thanks,"
          echo "Hafiza Maham"
          } > EMAIL_BODY.txt
          ls -l EMAIL_BODY.txt       # sanity check
      
      - name: Send summary e-mail
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          to: ${{ secrets.EMAIL_TO }}
          from: "PMO Bot <${{ secrets.EMAIL_USER }}>"
          subject: "Daily PMO Effort-Variance Report – ${{ job.status }}"
          body: file://${{ github.workspace }}/EMAIL_BODY.txt
